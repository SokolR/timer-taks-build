{"version":3,"sources":["actions/timerActions.js","fields.js","func.js","styles/styles.js","components/Info.js","actions/tabActions.js","components/Log.js","components/Chart.js","components/Timer.js","consts.js","components/Tab.js","components/Main.js","App.js","reducers/reducer.js","reducers/timer.js","reducers/tab.js","saga.js","index.js"],"names":["timerActions","timer","countTimer","value","type","count","buttonText","taskName","name","dateStart","date","openModal","isOpen","timerContinue","fieldsTasksLog","dateEnd","newTimer","arguments","length","undefined","moment","set","hour","minute","second","add","format","sortTasksLog","a","b","isBefore","dataForTaskChart","tasksLog","data","dayOfToday","i","push","pv","Object","toConsumableArray","sort","forEach","item","isDataStartToday","isSame","isDataEndToday","roundDateStart","startOf","roundDateEnd","endOf","hourDateStart","get","hourDateEnd","minutesDateStart","minutesDateEnd","countTransformPersist","_ref","Math","round","duration","asSeconds","dateFormat","isNumeric","n","isNaN","parseFloat","isFinite","generate","result","limit","tasksCount","coef","generateTaskDuration","currentSum","reduce","prev","cur","remainLimit","remainTasks","generateTimeTask","getRandom","valueOf","remainBreakTime","el","_tasksLog$push","breakTime","defineProperty","concat","newCoef","min","max","floor","random","connect","tab","withStyles","theme","button","margin","spacing","unit","backgroundColor","color","leftIcon","marginRight","root","objectSpread","mixins","gutters","paddingTop","paddingBottom","minWidth","width","marginTop","overflowX","table","maxWidth","whiteSpace","wrap","props","classes","id","match","params","react_default","createElement","index_es","container","alignItems","justify","direction","Link","to","variant","className","elevation","gutterBottom","key","component","scope","tabActions","openTabNumber","tabNumber","taskLog","dataForChart","mapDispatchToProps","changeTasksLog","boxShadow","borderRadius","rowTasksLog","cellTasksLog","overflow","textOverflow","buttonTable","map","hover","keys","j","size","onClick","ind","newTasksLog","filter","deleteTaskLog","_ref2","overflowY","textAlign","buttonGenerate","BarChart","height","maxBarSize","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","ticks","Tooltip","Legend","Bar","fill","paper","position","palette","background","shadows","padding","fontWeight","lineHeight","fontSize","modalTitleH2","modalTitleH3","buttonClose","left","buttonOnClick","onChangeTaskName","onChangeCloseModal","onChangeOpenModal","xs","placeholder","onChange","aria-labelledby","aria-describedby","open","onClose","style","top","transform","initialState","timerSetInterval","tabs","tasksChart","header","fieldHeader","flex","tabName","includes","event","val","history","label","Route","exact","path","TaskLog","TaskChart","MainPage","e","_this","changeTaskName","target","handlerOpenModal","_this$props","this","changeButtonText","Timer","Tab","Component","setTimer","setDateStart","App","lib","Switch","Info","router","reducer","combineReducers","state","action","dispatchDataForChart","changeTypeButton","onClickStart","onClickStop","saga","actionTasksLog","regenerator_default","_context","next","call","sent","put","stop","_marked","_context2","select","_marked2","isStart","_context3","delay","abrupt","_marked3","_newArrElement","newArrElement","_context4","_marked4","_context5","t0","all","takeEvery","t1","t2","t3","t4","_marked5","createBrowserHistory","sagaMiddleware","createSagaMiddleware","localStorageState","localStorage","getItem","newState","JSON","parse","getStateFromLocalStorage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","connectRouter","setItem","stringify","saveLocalStorage","applyMiddleware","routerMiddleware","run","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.043089f6.chunk.js","sourcesContent":["const timerActions = {\r\n    COUNT_TIMER: 'COUNT_TIMER',\r\n    BUTTON_TEXT: 'BUTTON_TEXT',\r\n    TASK_NAME: 'TASK_NAME',\r\n    DATE_START: 'DATE_START',\r\n    OPEN_MODAL: 'OPEN_MODAL',\r\n    TIMER_SET_INTERVAL: 'TIMER_SET_INTERVAL',\r\n    TIMER_CONTINUE: 'TIMER_CONTINUE'\r\n  }\r\n  \r\n  export const timer = {\r\n    countTimer: value => ({\r\n      type: timerActions.COUNT_TIMER,\r\n      count: value\r\n    }),\r\n    buttonText: () => ({\r\n      type: timerActions.BUTTON_TEXT\r\n    }),\r\n    taskName: value => ({\r\n      type: timerActions.TASK_NAME,\r\n      name: value\r\n    }),\r\n    dateStart: value => ({\r\n      type: timerActions.DATE_START,\r\n      date: value\r\n    }),\r\n    openModal: value => ({\r\n      type: timerActions.OPEN_MODAL,\r\n      isOpen: value\r\n    }),\r\n    timerContinue: () => ({\r\n      type: timerActions.TIMER_CONTINUE\r\n    })\r\n  }\r\n  ","export const fieldsTasksLog = {\r\n    taskName: 'taskName',\r\n    dateStart: 'dateStart',\r\n    dateEnd: 'dateEnd',\r\n    countTimer: 'countTimer'\r\n}  ","import moment from 'moment/moment'\r\nimport { fieldsTasksLog } from './fields'\r\n\r\nexport const newTimer = (timer, type = 's') => {\r\n  return moment(0)\r\n    .set({ hour: 0, minute: 0, second: 0 })\r\n    .add(timer, type)\r\n    .format('HH:mm:ss')\r\n}\r\n\r\nexport const sortTasksLog = (a, b) => {\r\n  if (\r\n    moment(a[fieldsTasksLog.dateStart]).isBefore(\r\n      moment(b[fieldsTasksLog.dateStart])\r\n    )\r\n  ) { return -1 }\r\n  if (\r\n    moment(b[fieldsTasksLog.dateStart]).isBefore(\r\n      moment(a[fieldsTasksLog.dateStart])\r\n    )\r\n  ) { return 1 }\r\n  return 0\r\n}\r\n\r\nexport const dataForTaskChart = tasksLog => {\r\n  const data = []\r\n  const dayOfToday = moment()\r\n\r\n  for (let i = 0; i < 24; i++) {\r\n    data.push({ name: i, pv: 0 })\r\n  }\r\n\r\n  const tasksLogWithSorting = [...tasksLog].sort(sortTasksLog)\r\n\r\n  tasksLogWithSorting.forEach(item => {\r\n    const isDataStartToday = moment(item[fieldsTasksLog.dateStart]).isSame(\r\n      dayOfToday,\r\n      'day'\r\n    )\r\n    const isDataEndToday = moment(item[fieldsTasksLog.dateEnd]).isSame(\r\n      dayOfToday,\r\n      'day'\r\n    )\r\n\r\n    if (!isDataStartToday && !isDataEndToday) return\r\n    const dateStart = moment(item[fieldsTasksLog.dateStart])\r\n    const dateEnd = moment(item[fieldsTasksLog.dateEnd])\r\n    const roundDateStart = isDataStartToday\r\n      ? dateStart\r\n      : dayOfToday.startOf('day')\r\n    const roundDateEnd = isDataEndToday ? dateEnd : dayOfToday.endOf('day')\r\n    const hourDateStart = roundDateStart.get('hour')\r\n    const hourDateEnd = roundDateEnd.get('hour')\r\n    const minutesDateStart = roundDateStart.get('minute')\r\n    const minutesDateEnd = isDataEndToday ? roundDateEnd.get('minute') : 60\r\n\r\n    for (let i = hourDateStart; i <= hourDateEnd; i++) {\r\n      if (hourDateEnd === hourDateStart) {\r\n        data[i].pv = data[i].pv + (minutesDateEnd - minutesDateStart)\r\n      } else if (i === hourDateStart) {\r\n        data[i].pv = data[i].pv + (60 - minutesDateStart)\r\n      } else if (i === hourDateEnd) {\r\n        data[i].pv = data[i].pv + minutesDateEnd\r\n      } else {\r\n        data[i].pv = data[i].pv + 60\r\n      }\r\n    }\r\n  })\r\n  return data\r\n}\r\n\r\nexport const countTransformPersist = ({\r\n  countTimer,\r\n  buttonText,\r\n  dateStart\r\n}) => {\r\n  if (!buttonText) {\r\n    return Math.round(moment.duration(moment() - moment(dateStart)).asSeconds())\r\n  } else return countTimer\r\n}\r\n\r\nexport const dateFormat = date => moment(date).format('DD-MM-YYYY HH:mm:ss')\r\n\r\nexport const isNumeric = n => !isNaN(parseFloat(n)) && isFinite(n)\r\n\r\nexport const generate = () => {\r\n  const limit = 480\r\n  const tasksCount = getRandom(10, 16)\r\n  const result = generateTimeTask(limit, tasksCount)\r\n  let tasksLog = []\r\n  let dateStart = moment()\r\n    .set({ hour: 9, minute: 0, second: 0 })\r\n    .valueOf()\r\n  let remainBreakTime =\r\n    (limit - result.reduce((prev, cur) => prev + cur, 0)) * 60000\r\n  result.forEach((el, i) => {\r\n    const breakTime = getRandom(0, remainBreakTime)\r\n    remainBreakTime = remainBreakTime - breakTime\r\n    tasksLog.push({\r\n      [fieldsTasksLog.taskName]: `task ${i + 1}`,\r\n      [fieldsTasksLog.dateStart]: dateStart,\r\n      [fieldsTasksLog.dateEnd]: dateStart + el * 60000,\r\n      [fieldsTasksLog.countTimer]: newTimer(el, 'm')\r\n    })\r\n    dateStart = dateStart + el * 60000 + breakTime\r\n  })\r\n  return tasksLog\r\n}\r\n\r\nfunction generateTimeTask (limit, tasksCount) {\r\n  const result = []\r\n  let coef = null\r\n\r\n  for (let i = 0; i < tasksCount; i++) {\r\n    result.push(generateTaskDuration(coef))\r\n    const currentSum = result.reduce((prev, cur) => prev + cur, 0)\r\n    const remainLimit = limit - currentSum\r\n    const remainTasks = tasksCount - result.length\r\n    coef = remainLimit / remainTasks\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction generateTaskDuration (newCoef) {\r\n  let coef = 91\r\n\r\n  if (newCoef != null && newCoef >= 0 && newCoef <= 91) {\r\n    coef = newCoef\r\n  }\r\n\r\n  return getRandom(10, coef)\r\n}\r\n\r\nfunction getRandom (min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n\r\nexport function getStateFromLocalStorage (state) {\r\n  const newState = JSON.parse(state)\r\n  return {\r\n    ...newState,\r\n    timer: {\r\n      ...newState.timer,\r\n      countTimer: countTransformPersist(newState.timer)\r\n    },\r\n    tab: {\r\n      ...newState.tab,\r\n      dataForChart: dataForTaskChart(newState.tab.tasksLog)\r\n    }\r\n  }\r\n}\r\n","export function getModalStyle () {\r\n    const top = 50\r\n    const left = 50\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`\r\n    }\r\n  }\r\n  \r\n  export const stylesModalTimer = theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: theme.spacing.unit * 100,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing.unit * 2\r\n    },\r\n    taskName: {\r\n      color: '#50cbde !important',\r\n      fontWeight: '700'\r\n    },\r\n    timer: {\r\n      width: '250px',\r\n      height: '250px',\r\n      borderRadius: '50%',\r\n      margin: '15px',\r\n      textAlign: 'center',\r\n      lineHeight: '250px',\r\n      fontSize: '40px',\r\n      fontWeight: '700'\r\n    },\r\n    modalTitleH2: {\r\n      margin: '20px',\r\n      marginTop: '10px',\r\n      color: '#C74670'\r\n    },\r\n    modalTitleH3: {\r\n      margin: '20px'\r\n    },\r\n    buttonClose: {\r\n      color: '#50cbde',\r\n      left: '90%'\r\n    }\r\n  })\r\n  \r\n  export const stylesTasksLog = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: 0,\r\n      overflowX: 'auto',\r\n      boxShadow: 'inherit',\r\n      borderRadius: 'inherit'\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n      color: '#1155cc'\r\n    },\r\n    rowTasksLog: {\r\n      backgroundColor: '#eaf6fe'\r\n    },\r\n    cellTasksLog: {\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      maxWidth: '200px',\r\n      color: '#1155cc'\r\n    },\r\n    buttonTable: {\r\n      backgroundColor: '#ffffff',\r\n      margin: '10% auto'\r\n    }\r\n  })\r\n  \r\n  export const stylesInfo = theme => ({\r\n    button: {\r\n      margin: theme.spacing.unit,\r\n      backgroundColor: '#48BDD5',\r\n      color: '#ffffff'\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing.unit\r\n    },\r\n    root: {\r\n      ...theme.mixins.gutters(),\r\n      paddingTop: theme.spacing.unit * 2,\r\n      paddingBottom: theme.spacing.unit * 2,\r\n      minWidth: '50%',\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit * 3,\r\n      overflowX: 'auto'\r\n    },\r\n    table: {\r\n      maxWidth: 900,\r\n      whiteSpace: 'nowrap'\r\n    },\r\n    wrap: {\r\n      whiteSpace: 'normal'\r\n    }\r\n  })\r\n  \r\n  export const stylesMain = theme => ({\r\n    root: {\r\n      padding: '20px'\r\n    }\r\n  })\r\n  \r\n  export const stylesTasksChart = theme => ({\r\n    root: {\r\n      margin: '5px',\r\n      overflowX: 'auto',\r\n      overflowY: 'hidden',\r\n      textAlign: 'right'\r\n    },\r\n    buttonGenerate: {\r\n      marginTop: theme.spacing.unit * 3,\r\n      marginRight: theme.spacing.unit * 15\r\n    }\r\n  })\r\n  \r\n  export const stylesTab = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: '5%'\r\n    },\r\n    header: {\r\n      backgroundColor: '#48bdd5',\r\n      boxShadow: 'inherit'\r\n    },\r\n    fieldHeader: {\r\n      maxWidth: '100%',\r\n      flex: '1',\r\n      fontWeight: '700',\r\n      fontSize: '1rem !important'\r\n    }\r\n  })\r\n  ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { dateFormat, isNumeric } from '../func'\r\nimport { stylesInfo } from '../styles/styles'\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  withStyles,\r\n  Icon,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow\r\n} from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Info = props => {\r\n  const {\r\n    classes,\r\n    tasksLog,\r\n    match: {\r\n      params: { id }\r\n    }\r\n  } = props\r\n\r\n  return (\r\n    <Grid container alignItems='center' justify='center' direction='column'>\r\n      <Grid item>\r\n        <Link to={'/timer/'}>\r\n          <Button variant='contained' className={classes.button}>\r\n            <Icon className={classes.leftIcon}>\r\n              <i className='fas fa-long-arrow-alt-left' />\r\n            </Icon>\r\n            Back\r\n          </Button>\r\n        </Link>\r\n        <Paper className={classes.root} elevation={1}>\r\n          {(!isNumeric(id) || id <= 0 || id > tasksLog.length) && (\r\n            <Typography variant='headline' gutterBottom>\r\n              This page does not exist!\r\n            </Typography>\r\n          )}\r\n          {isNumeric(id) &&\r\n            id > 0 &&\r\n            id <= tasksLog.length && (\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Task</TableCell>\r\n                  <TableCell>Time start</TableCell>\r\n                  <TableCell>Time end</TableCell>\r\n                  <TableCell>Time spend</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow key={id}>\r\n                  <TableCell\r\n                    component='th'\r\n                    scope='row'\r\n                    className={classes.wrap}\r\n                  >\r\n                    {tasksLog[id - 1].taskName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {dateFormat(tasksLog[id - 1].dateStart)}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {dateFormat(tasksLog[id - 1].dateEnd)}\r\n                  </TableCell>\r\n                  <TableCell>{tasksLog[id - 1].countTimer}</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ tab: { tasksLog } }) => ({ tasksLog })\r\n\r\nInfo.propTypes = {\r\n  classes: PropTypes.object,\r\n  tasksLog: PropTypes.array,\r\n  match: PropTypes.object\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(stylesInfo)(Info))\r\n","const tabActions = {\r\n    OPEN_TAB_NUMBER: 'OPEN_TAB_NUMBER',\r\n    TASKS_LOG: 'TASKS_LOG',\r\n    DATA_FOR_CHART: 'DATA_FOR_CHART'\r\n  }\r\n  \r\n  export const tab = {\r\n    openTabNumber: value => ({\r\n      type: tabActions.OPEN_TAB_NUMBER,\r\n      tabNumber: value\r\n    }),\r\n    tasksLog: value => ({\r\n      type: tabActions.TASKS_LOG,\r\n      taskLog: value\r\n    }),\r\n    dataForChart: value => ({\r\n      type: tabActions.DATA_FOR_CHART,\r\n      data: value\r\n    })\r\n  }","import React from 'react'\r\nimport moment from 'moment/moment'\r\nimport { fieldsTasksLog } from '../fields'\r\nimport { connect } from 'react-redux'\r\nimport { tab } from '../actions/tabActions'\r\nimport { Link } from 'react-router-dom'\r\nimport { stylesTasksLog } from '../styles/styles'\r\nimport {\r\n  withStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button\r\n} from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TaskLog = props => {\r\n  const { classes, tasksLog, changeTasksLog } = props\r\n\r\n  const deleteTaskLog = ind => {\r\n    const newTasksLog = tasksLog.filter((item, i) => {\r\n      return ind !== i\r\n    })\r\n    changeTasksLog(newTasksLog)\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>№</TableCell>\r\n            <TableCell>Task</TableCell>\r\n            <TableCell>Time start</TableCell>\r\n            <TableCell>Time end</TableCell>\r\n            <TableCell>Time spend</TableCell>\r\n            <TableCell>Info</TableCell>\r\n            <TableCell>Delete</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {tasksLog.map((item, i) => (\r\n            <TableRow key={i} className={classes.rowTasksLog} hover>\r\n              <TableCell className={classes.cellTasksLog}>{i + 1}</TableCell>\r\n              {Object.keys(item).map((el, j) => (\r\n                <TableCell key={j} className={classes.cellTasksLog}>\r\n                  {el === fieldsTasksLog.dateStart ||\r\n                  el === fieldsTasksLog.dateEnd\r\n                    ? moment(item[el]).format('HH:mm:ss')\r\n                    : item[el]}\r\n                </TableCell>\r\n              ))}\r\n              <TableCell className={classes.cellTasksLog}>\r\n                <Link to={`/tasks/${i + 1}`}>\r\n                  <Button\r\n                    size='small'\r\n                    variant='outlined'\r\n                    color='inherit'\r\n                    className={classes.buttonTable}\r\n                  >\r\n                    INFO\r\n                  </Button>\r\n                </Link>\r\n              </TableCell>\r\n              <TableCell className={classes.cellTasksLog}>\r\n                <Button\r\n                  size='small'\r\n                  variant='outlined'\r\n                  onClick={() => deleteTaskLog(i)}\r\n                  color='inherit'\r\n                  className={classes.buttonTable}\r\n                >\r\n                  DELETE\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ tab: { tasksLog } }) => ({ tasksLog })\r\n\r\nconst mapDispatchToProps = {\r\n  changeTasksLog: tab.tasksLog\r\n}\r\n\r\nTaskLog.propTypes = {\r\n  classes: PropTypes.object,\r\n  tasksLog: PropTypes.array,\r\n  changeTasksLog: PropTypes.func\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(stylesTasksLog)(TaskLog))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withStyles, Button } from '@material-ui/core'\r\nimport { stylesTasksChart } from '../styles/styles'\r\nimport { generate } from '../func'\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from 'recharts'\r\nimport { tab } from '../actions/tabActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TaskChart = ({ dataForChart, classes, changeTasksLog }) => {\r\n  const handleClickGenerate = () => {\r\n    changeTasksLog(generate())\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <BarChart\r\n        width={1600}\r\n        height={325}\r\n        maxBarSize={25}\r\n        data={dataForChart}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey='name' />\r\n        <YAxis ticks={[0, 15, 30, 45, 60]} />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey='pv' fill='#3450c7' name='Minutes in this hours' />\r\n      </BarChart>\r\n      <Button\r\n        size='small'\r\n        variant='outlined'\r\n        onClick={handleClickGenerate}\r\n        color='inherit'\r\n        className={classes.buttonGenerate}\r\n      >\r\n        GENERATE\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ tab: { dataForChart } }) => ({ dataForChart })\r\n\r\nconst mapDispatchToProps = {\r\n  changeTasksLog: tab.tasksLog\r\n}\r\n\r\nTaskChart.propTypes = {\r\n  dataForChart: PropTypes.array,\r\n  classes: PropTypes.object,\r\n  changeTasksLog: PropTypes.func\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(stylesTasksChart)(TaskChart))\r\n","import React from 'react'\r\nimport { newTimer } from '../func'\r\nimport { getModalStyle, stylesModalTimer } from '../styles/styles'\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Modal,\r\n  Typography,\r\n  withStyles\r\n} from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ModalTimer = ({\r\n  timer,\r\n  buttonOnClick,\r\n  onChangeTaskName,\r\n  onChangeCloseModal,\r\n  onChangeOpenModal,\r\n  classes\r\n}) => {\r\n  const changeButton = () => {\r\n    if (!timer.taskName && !timer.buttonText) {\r\n      onChangeOpenModal(true)\r\n    } else {\r\n      buttonOnClick()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Grid\r\n        container\r\n        alignItems='center'\r\n        justify='center'\r\n        direction='column'\r\n        spacing={16}\r\n      >\r\n        <TextField\r\n          className={classes.taskName}\r\n          id='with-placeholder'\r\n          placeholder='Name of your task'\r\n          margin='normal'\r\n          value={timer.taskName}\r\n          onChange={onChangeTaskName}\r\n        />\r\n        <Paper className={classes.timer}>{newTimer(timer.countTimer)}</Paper>\r\n        <Button\r\n          size='small'\r\n          variant='outlined'\r\n          onClick={changeButton}\r\n          color='inherit'\r\n        >\r\n          {timer.buttonText ? 'START' : 'STOP'}\r\n        </Button>\r\n        <Modal\r\n          aria-labelledby='simple-modal-title'\r\n          aria-describedby='simple-modal-description'\r\n          open={timer.openModal}\r\n          onClose={onChangeCloseModal}\r\n        >\r\n          <Paper style={getModalStyle()} className={classes.paper}>\r\n            <Typography variant='title' className={classes.modalTitleH2}>\r\n              Empty task name\r\n            </Typography>\r\n            <Typography\r\n              variant='subheading'\r\n              id='simple-modal-description'\r\n              className={classes.modalTitleH3}\r\n            >\r\n              You are trying close your task without name, enter the title and\r\n              try again!\r\n            </Typography>\r\n            <Button\r\n              size='medium'\r\n              onClick={onChangeCloseModal}\r\n              className={classes.buttonClose}\r\n            >\r\n              CLOSE\r\n            </Button>\r\n          </Paper>\r\n        </Modal>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nModalTimer.propTypes = {\r\n  timer: PropTypes.object,\r\n  onChangeTaskName: PropTypes.func,\r\n  onChangeCloseModal: PropTypes.func,\r\n  classes: PropTypes.object,\r\n  buttonOnClick: PropTypes.func,\r\n  onChangeOpenModal: PropTypes.func\r\n}\r\n\r\nexport default withStyles(stylesModalTimer)(ModalTimer)\r\n","import { dataForTaskChart } from './func'; \r\n\r\nexport const initialState = {\r\n  timer: {\r\n    countTimer: 0,\r\n    buttonText: true,\r\n    taskName: '',\r\n    dateStart: 0,\r\n    openModal: false,\r\n    timerSetInterval: null\r\n  },\r\n  tab: {\r\n    openTabNumber: 0,\r\n    tasksLog: [],\r\n    dataForChart: dataForTaskChart([])\r\n  }\r\n}\r\n\r\nexport const tabs = {\r\n  tasksLog: 'tasks-log',\r\n  tasksChart: 'tasks-chart'\r\n}\r\n","import React from 'react'\r\nimport TaskLog from './Log'\r\nimport TaskChart from './Chart'\r\nimport { AppBar, Tabs, Tab, withStyles } from '@material-ui/core'\r\nimport { Route } from 'react-router'\r\nimport { tabs } from '../consts'\r\nimport { stylesTab } from '../styles/styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TabTask = props => {\r\n  const handleChange = (event, val) => {\r\n    props.history.push(`/timer/${val}`)\r\n  }\r\n\r\n  const tabName = props.match.params.name\r\n  const { classes } = props\r\n\r\n  if (!tabName || ![tabs.tasksLog, tabs.tasksChart].includes(tabName)) {\r\n    props.history.push('/timer/tasks-log')\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' className={classes.header}>\r\n        <Tabs value={tabName} onChange={handleChange}>\r\n          <Tab\r\n            label='TASKS LOG'\r\n            className={classes.fieldHeader}\r\n            value='tasks-log'\r\n          />\r\n          <Tab\r\n            label='TASKS CHART'\r\n            className={classes.fieldHeader}\r\n            value='tasks-chart'\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <Route exact path='/timer/tasks-log' component={TaskLog} />\r\n      <Route exact path='/timer/tasks-chart' component={TaskChart} />\r\n    </div>\r\n  )\r\n}\r\n\r\nTabTask.propTypes = {\r\n  history: PropTypes.object,\r\n  match: PropTypes.object,\r\n  classes: PropTypes.object\r\n}\r\n\r\nexport default withStyles(stylesTab)(TabTask)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { timer } from '../actions/timerActions'\r\nimport { tab } from '../actions/tabActions'\r\nimport ModalTimer from './Timer'\r\nimport TabTask from './Tab'\r\nimport { withStyles, Grid } from '@material-ui/core'\r\nimport { stylesMain } from '../styles/styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass MainPage extends Component {\r\n  onChangeTaskName = e => {\r\n    this.props.changeTaskName(e.target.value)\r\n  };\r\n\r\n  onChangeOpenModal = () => {\r\n    this.props.handlerOpenModal(true)\r\n  };\r\n\r\n  onChangeCloseModal = () => {\r\n    this.props.handlerOpenModal(false)\r\n  };\r\n\r\n  render () {\r\n    const { timer, classes, match, history, changeButtonText } = this.props\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container alignItems='center' justify='center' direction='column'>\r\n          <ModalTimer\r\n            timer={timer}\r\n            buttonOnClick={changeButtonText}\r\n            onChangeTaskName={this.onChangeTaskName}\r\n            onChangeCloseModal={this.onChangeCloseModal}\r\n            onChangeOpenModal={this.onChangeOpenModal}\r\n          />\r\n          <TabTask match={match} history={history} />\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ timer, tab }) => {\r\n  return {\r\n    timer,\r\n    tab\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setTimer: timer.countTimer,\r\n  changeButtonText: timer.buttonText,\r\n  changeTaskName: timer.taskName,\r\n  setDateStart: timer.dateStart,\r\n  handlerOpenModal: timer.openModal,\r\n  changeTasksLog: tab.tasksLog\r\n}\r\n\r\nMainPage.propTypes = {\r\n  timer: PropTypes.object,\r\n  changeButtonText: PropTypes.func,\r\n  changeTaskName: PropTypes.func,\r\n  handlerOpenModal: PropTypes.func,\r\n  classes: PropTypes.object,\r\n  match: PropTypes.object,\r\n  history: PropTypes.object\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(stylesMain)(MainPage))\r\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { timer } from './actions/timerActions'\nimport { Route, Switch } from 'react-router'\nimport Info from './components/Info'\nimport TaskLog from './components/Log'\nimport TaskChart from './components/Chart'\nimport MainPage from './components/Main'\nimport { ConnectedRouter } from 'connected-react-router'\nimport PropTypes from 'prop-types'\n\nclass App extends Component {\n  componentDidMount () {\n    if (!this.props.timer.buttonText) {\n      this.props.timerContinue()\n    }\n  }\n\n  render () {\n    return (\n      <ConnectedRouter history={this.props.history}>\n        <Switch>\n          <Route\n            path='/timer/:name'\n            // render={props => <MainPage {...props} {...timerProps} />}\n            component={MainPage}\n          />\n          <Route exact path='/tasks-log' component={TaskLog} />\n          <Route exact path='/tasks-chart' component={TaskChart} />\n          <Route exact path='/tasks/:id' component={Info} />\n          <Route component={MainPage} />\n        </Switch>\n      </ConnectedRouter>\n    )\n  }\n}\n\nconst mapStateToProps = ({ timer, tab, router }) => {\n  return {\n    timer,\n    tab,\n    router\n  }\n}\n\nconst mapDispatchToProps = {\n  timerContinue: timer.timerContinue\n}\n\nApp.propTypes = {\n  timer: PropTypes.object,\n  timerContinue: PropTypes.func,\n  history: PropTypes.object\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import { combineReducers } from 'redux';\r\nimport { timer } from './timer';\r\nimport { tab } from './tab';\r\n\r\nexport const reducer = combineReducers({\r\n  timer,\r\n  tab\r\n})","export const timer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'COUNT_TIMER':\r\n        return { ...state, countTimer:action.count }\r\n        case 'BUTTON_TEXT':\r\n        return { ...state, buttonText: !state.buttonText }\r\n        case 'TASK_NAME':\r\n        return { ...state, taskName: action.name }\r\n        case 'DATE_START':\r\n        return { ...state, dateStart: action.date }\r\n        case 'OPEN_MODAL':\r\n        return { ...state, openModal: action.isOpen }\r\n        case 'TIMER_CONTINUE':\r\n        return { ...state, timerContinue: !state.timerContinue }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}\r\n","export const tab = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case 'OPEN_TAB_NUMBER':\r\n        return { ...state, openTabNumber: action.tabNumber }\r\n      case 'TASKS_LOG':\r\n        return { ...state, tasksLog: action.taskLog }\r\n      case 'DATA_FOR_CHART':\r\n        return { ...state, dataForChart: action.data }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n}","import { call, put, takeEvery, all, select } from 'redux-saga/effects'\r\nimport { tab } from './actions/tabActions'\r\nimport { timer } from './actions/timerActions'\r\nimport { dataForTaskChart, newTimer } from './func'\r\nimport moment from 'moment/moment'\r\nimport { fieldsTasksLog } from './fields'\r\nimport { delay } from 'redux-saga'\r\n\r\nfunction * dispatchDataForChart (params) {\r\n  const actionTasksLog = yield call(tab.tasksLog, params)\r\n  yield put(tab.dataForChart(dataForTaskChart(actionTasksLog.taskLog.taskLog)))\r\n}\r\n\r\nfunction * changeTypeButton () {\r\n  const timerState = yield select((state) => state.timer)\r\n\r\n  if (timerState.buttonText) {\r\n    yield call(onClickStop)\r\n  } else {\r\n    yield put(timer.dateStart(moment().valueOf()))\r\n    yield call(onClickStart)\r\n  }\r\n}\r\n\r\nexport function * onClickStart () {\r\n  let isStart = yield select(state => state.timer.buttonText)\r\n  while (!isStart) {\r\n    yield call(delay, 1000)\r\n\r\n    const { buttonText, countTimer: count } = yield select(state => state.timer)\r\n    isStart = buttonText;\r\n\r\n    if (isStart) break\r\n\r\n    yield put(timer.countTimer(count + 1))\r\n  }\r\n}\r\n\r\nfunction * onClickStop () {\r\n  const { taskName, dateStart, countTimer } = yield select(state => state.timer)\r\n  const tasksLog = yield select(state => state.tab.tasksLog)\r\n  const dateEnd = moment().valueOf()\r\n  const newArrElement = {\r\n    [fieldsTasksLog.taskName]: taskName,\r\n    [fieldsTasksLog.dateStart]: dateStart,\r\n    [fieldsTasksLog.dateEnd]: dateEnd,\r\n    [fieldsTasksLog.countTimer]: newTimer(countTimer)\r\n  }\r\n  const newTasksLog = [...tasksLog, newArrElement]\r\n  yield put(tab.tasksLog(newTasksLog))\r\n  yield put(timer.countTimer(0))\r\n  yield put(timer.taskName(''))\r\n}\r\n\r\nexport default function * saga () {\r\n  yield all([\r\n    yield takeEvery('TASKS_LOG', dispatchDataForChart),\r\n    yield takeEvery('BUTTON_TEXT', changeTypeButton),\r\n    yield takeEvery('TIMER_CONTINUE', onClickStart),\r\n  ])\r\n}\r\n","import React from 'react'\nimport { render } from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { reducer } from './reducers/reducer'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport saga from './saga'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { initialState } from './consts'\nimport { getStateFromLocalStorage } from './func'\nimport { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst localStorageState = localStorage.getItem('reducer')\n  ? getStateFromLocalStorage(localStorage.getItem('reducer'))\n  : initialState\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst saveLocalStorage = (reducer) => {\n  return (state, action) => {\n    const result = reducer(state, action)\n    localStorage.setItem('reducer', JSON.stringify(result))\n    return result\n  }\n}\n\nconst store = createStore(\n  connectRouter(history)(saveLocalStorage(reducer)),\n  localStorageState,\n  composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n)\n\nsagaMiddleware.run(saga)\n\nrender(\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}